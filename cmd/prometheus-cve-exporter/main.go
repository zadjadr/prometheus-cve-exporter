package main

import (
	"fmt"
	"log"
	"net/http"

	"zops.top/prometheus-cve-exporter/config"
	"zops.top/prometheus-cve-exporter/internal/exporter"

	"github.com/prometheus/client_golang/prometheus"
	"github.com/prometheus/client_golang/prometheus/promhttp"
)

func main() {
	cfg, err := config.Load()
	if err != nil {
		log.Fatalf("Failed to load configuration: %v", err)
	}

	go exporter.UpdateMetrics(cfg)
	startServer(cfg)
}

func startServer(cfg *config.Config) {
	http.Handle("/metrics", promhttp.HandlerFor(
		prometheus.DefaultGatherer,
		promhttp.HandlerOpts{
			EnableOpenMetrics: true,
		},
	))
	fmt.Printf("Starting server on :%d\n", cfg.Port)
	log.Fatal(http.ListenAndServe(fmt.Sprintf(":%d", cfg.Port), nil))
}
